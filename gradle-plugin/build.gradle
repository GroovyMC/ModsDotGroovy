plugins {
    id 'idea'

    id 'groovy'
    id 'groovy-gradle-plugin'

    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '1.2.1'
}

group = 'org.groovymc.modsdotgroovy'
base.archivesName = 'modsdotgroovy'

repositories {
    mavenCentral()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy() // due to Gradle limitations, we must use localGroovy() for Gradle plugins

    implementation projects.core

    implementation 'com.moandjiezana.toml:toml4j:0.7.2'
    implementation 'org.yaml:snakeyaml:2.1'
}

gradlePlugin {
    website = vcsUrl = 'https://github.com/GroovyMC/ModsDotGroovy'
    plugins {
        modsdotgroovy {
            id = 'org.groovymc.modsdotgroovy'
            displayName = 'ModsDotGroovy'
            description = 'A Gradle plugin for creation of mods.toml file from a groovy file'
            implementationClass = 'org.groovymc.modsdotgroovy.gradle.ModsDotGroovyGradlePlugin'
            tags.set(['groovy', 'minecraft', 'forge', 'neoforge', 'fabric', 'quilt', 'spigot'])
        }
    }
}

java {
    withSourcesJar()
    withJavadocJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

tasks.withType(GroovyCompile).configureEach {
    groovyOptions.optimizationOptions.indy = true
    options.incremental = true
}

publishing {
    publications.register('gradlePlugin', MavenPublication) {
        artifactId = 'modsdotgroovy'
        version = project.version

        artifacts = [jar, sourcesJar]
    }

    repositories {
        maven {
            name = 'ModdingInquisitionMavenRepo'
            url = 'https://maven.moddinginquisition.org/snapshots'
            credentials {
                username = System.getenv('MAVEN_USER') ?: findProperty('inquisitionMavenUser') ?: ''
                password = System.getenv('MAVEN_PASSWORD') ?: findProperty('inquisitionMavenPassword') ?: ''
            }
        }
    }
}
