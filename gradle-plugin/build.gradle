plugins {
    id 'idea'
    id 'groovy-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.2.1'
}

if (System.getenv('GPP_KEY')) {
    ext['gradle.publish.key'] = System.getenv('GPP_KEY')
    ext['gradle.publish.secret'] = System.getenv('GPP_SECRET')
}

repositories {
    gradlePluginPortal()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy() // due to Gradle limitations, we must use localGroovy() for Gradle plugins

    implementation projects.core

    implementation 'com.moandjiezana.toml:toml4j:0.7.2'
    implementation 'org.yaml:snakeyaml:2.1'
}

gradlePlugin {
    website = vcsUrl = 'https://github.com/GroovyMC/ModsDotGroovy'
    plugins {
        modsdotgroovy {
            id = 'org.groovymc.modsdotgroovy'
            displayName = 'ModsDotGroovy'
            description = 'A Gradle plugin for creation of mods metadata file from a groovy file'
            implementationClass = 'org.groovymc.modsdotgroovy.gradle.ModsDotGroovyGradlePlugin'
            tags.set(['groovy', 'minecraft', 'forge', 'neoforge', 'fabric', 'quilt', 'spigot'])
        }
    }
}

afterEvaluate {
    publishing {
        publications.named('pluginMaven', MavenPublication) {
            pom {
                name = 'mods.groovy gradle plugin'
                description = 'A Gradle plugin for creation of mods metadata file from a groovy file'
                url = 'https://github.com/GroovyMC/ModsDotGroovy'
            }
        }
    }
    signing {
        sign publishing.publications.pluginMaven
    }
}